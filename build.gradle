buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE')
        classpath('org.ajoberstar:gradle-git:1.3.2')
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'spring-boot'

    repositories {
        jcenter()
    }

    sourceCompatibility = 1.8

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')

        testCompile('org.springframework.boot:spring-boot-starter-test'){
            exclude module: 'hamcrest-core'
            exclude module: 'hamcrest-library'
            exclude module: 'mockito-core'
        }
        testCompile('org.mockito:mockito-core:1.10.19')
        testCompile('org.assertj:assertj-core:3.2.0')
        testCompile('junit:junit:4.12') {
            exclude module: 'hamcrest-core'
        }
    }
}

import org.ajoberstar.grgit.*

ext.repo = Grgit.open()

version = "1.0.0-${repo.head().abbreviatedId}"

task unstaged << {
    def unstagedChanges = "git diff --exit-code".execute()
    unstagedChanges.waitFor();
    if (unstagedChanges.exitValue() != 0) {
        throw new GradleException("Please commit or discard all unstaged changes.")
    }
}
task tagRelease << {
    repo.tag.add {
        name = version
        message = "Release of ${version}"
    }
    repo.push(tags: true)
}
task rebase << {repo.pull(rebase: true)}
task push << {repo.push()}

task deliver(type: DefaultTask)
rebase.dependsOn unstaged
push.dependsOn rebase
push.dependsOn ':app:build'
deliver.dependsOn push